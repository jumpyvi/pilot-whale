on:
  push:
    branches: ["master", "docs", "environment-update"]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

name: CI

jobs:
  # Builds the flatpak and release it
  flatpak-builder:
    name: "Flatpak Builder"
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:gnome-47
      options: --privileged

    steps:
    - uses: actions/checkout@v4

    - name: Generate release tag
      id: tag
      run: |
        TAG=$(sed -n "s/^.*version: '\([^']*\)'.*$/\1/p" meson.build | head -n1)
        echo "release_tag=${TAG:-UNKOWN}" >> $GITHUB_OUTPUT

    - name: Create and push tag
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git tag ${{ steps.tag.outputs.release_tag }} || echo "Tag already exists"
        git push origin ${{ steps.tag.outputs.release_tag }} || echo "Tag push skipped"

    - uses: flathub-infra/flatpak-github-actions/flatpak-builder@4388a4c5fc8bab58e1dfb7fc63267dca0f7b4976
      with:
        bundle: "pilot-whale-${{ steps.tag.outputs.release_tag }}-x86_64.flatpak"
        manifest-path: "com.github.jumpyvi.pilot-whale.yml"
        arch: x86_64

    - name: Publish release package
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: pilot-whale-${{ steps.tag.outputs.release_tag }}-x86_64.flatpak

  # Generate the valadoc and push it to github pages
  generate-valadoc:
    name: "Valadoc"
    runs-on: ubuntu-latest
    container:
      image: fedora:41
      options: --privileged

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        dnf install -y just dbus-daemon gtk4-devel ninja-build meson libadwaita-devel libgee-devel json-glib-devel desktop-file-utils libcurl-devel vala vala-language-server valadoc graphviz git

    - name: Build project
      run: |
        just meson-build 

    - name: Generate Valadoc
      run: |
        just generate-valadoc

    - name: Upload Valadoc to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs

  # Pre-build the devcontainer docker image and push it to ghcr.io
  build-and-publish-docker:
    name: "Build and Publish Devcontainer Dockerfile"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker image
      run: docker build -t ghcr.io/${{ github.repository_owner }}/pilotwhale-devcontainer:latest -f ./dev.Dockerfile .

    - name: Push Docker image
      run: docker push ghcr.io/${{ github.repository_owner }}/pilotwhale-devcontainer:latest

